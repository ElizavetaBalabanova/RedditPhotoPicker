// Generated by Dagger (https://dagger.dev).
package com.balabanova.humblr.data.repository;

import com.balabanova.humblr.data.api.ApiPost;
import com.balabanova.humblr.data.api.ApiProfile;
import com.balabanova.humblr.data.api.ApiSubreddits;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SubredditsRemoteRepositoryImpl_Factory implements Factory<SubredditsRemoteRepositoryImpl> {
  private final Provider<ApiSubreddits> apiSubredditsProvider;

  private final Provider<ApiPost> apiPostProvider;

  private final Provider<ApiProfile> apiProfileProvider;

  public SubredditsRemoteRepositoryImpl_Factory(Provider<ApiSubreddits> apiSubredditsProvider,
      Provider<ApiPost> apiPostProvider, Provider<ApiProfile> apiProfileProvider) {
    this.apiSubredditsProvider = apiSubredditsProvider;
    this.apiPostProvider = apiPostProvider;
    this.apiProfileProvider = apiProfileProvider;
  }

  @Override
  public SubredditsRemoteRepositoryImpl get() {
    return newInstance(apiSubredditsProvider.get(), apiPostProvider.get(), apiProfileProvider.get());
  }

  public static SubredditsRemoteRepositoryImpl_Factory create(
      Provider<ApiSubreddits> apiSubredditsProvider, Provider<ApiPost> apiPostProvider,
      Provider<ApiProfile> apiProfileProvider) {
    return new SubredditsRemoteRepositoryImpl_Factory(apiSubredditsProvider, apiPostProvider, apiProfileProvider);
  }

  public static SubredditsRemoteRepositoryImpl newInstance(ApiSubreddits apiSubreddits,
      ApiPost apiPost, ApiProfile apiProfile) {
    return new SubredditsRemoteRepositoryImpl(apiSubreddits, apiPost, apiProfile);
  }
}
