// Generated by view binder compiler. Do not edit!
package com.balabanova.humblr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.balabanova.humblr.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonClearSaved;

  @NonNull
  public final Button buttonListOfFriends;

  @NonNull
  public final Button buttonLogout;

  @NonNull
  public final CommonProgressErrorBinding common;

  @NonNull
  public final LinearLayout containerView;

  @NonNull
  public final TextView followers;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView karma;

  @NonNull
  public final LinearLayout userDataFrame;

  @NonNull
  public final TextView userId;

  @NonNull
  public final TextView userName;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonClearSaved, @NonNull Button buttonListOfFriends,
      @NonNull Button buttonLogout, @NonNull CommonProgressErrorBinding common,
      @NonNull LinearLayout containerView, @NonNull TextView followers,
      @NonNull ImageView imageView, @NonNull TextView karma, @NonNull LinearLayout userDataFrame,
      @NonNull TextView userId, @NonNull TextView userName) {
    this.rootView = rootView;
    this.buttonClearSaved = buttonClearSaved;
    this.buttonListOfFriends = buttonListOfFriends;
    this.buttonLogout = buttonLogout;
    this.common = common;
    this.containerView = containerView;
    this.followers = followers;
    this.imageView = imageView;
    this.karma = karma;
    this.userDataFrame = userDataFrame;
    this.userId = userId;
    this.userName = userName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_clear_saved;
      Button buttonClearSaved = ViewBindings.findChildViewById(rootView, id);
      if (buttonClearSaved == null) {
        break missingId;
      }

      id = R.id.button_list_of_friends;
      Button buttonListOfFriends = ViewBindings.findChildViewById(rootView, id);
      if (buttonListOfFriends == null) {
        break missingId;
      }

      id = R.id.button_logout;
      Button buttonLogout = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogout == null) {
        break missingId;
      }

      id = R.id.common;
      View common = ViewBindings.findChildViewById(rootView, id);
      if (common == null) {
        break missingId;
      }
      CommonProgressErrorBinding binding_common = CommonProgressErrorBinding.bind(common);

      id = R.id.container_view;
      LinearLayout containerView = ViewBindings.findChildViewById(rootView, id);
      if (containerView == null) {
        break missingId;
      }

      id = R.id.followers;
      TextView followers = ViewBindings.findChildViewById(rootView, id);
      if (followers == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.karma;
      TextView karma = ViewBindings.findChildViewById(rootView, id);
      if (karma == null) {
        break missingId;
      }

      id = R.id.user_data_frame;
      LinearLayout userDataFrame = ViewBindings.findChildViewById(rootView, id);
      if (userDataFrame == null) {
        break missingId;
      }

      id = R.id.user_id;
      TextView userId = ViewBindings.findChildViewById(rootView, id);
      if (userId == null) {
        break missingId;
      }

      id = R.id.user_name;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, buttonClearSaved,
          buttonListOfFriends, buttonLogout, binding_common, containerView, followers, imageView,
          karma, userDataFrame, userId, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
