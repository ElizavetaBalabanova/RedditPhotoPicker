// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.balabanova.humblr.`data`.api.dto.profileDto

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class ProfileDtoJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<ProfileDto>() {
  private val options: JsonReader.Options = JsonReader.Options.of("name", "id", "icon_img",
      "subreddit", "total_karma")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "name")

  private val nullableUserDataSubDtoAdapter: JsonAdapter<ProfileDto.UserDataSubDto?> =
      moshi.adapter(ProfileDto.UserDataSubDto::class.java, emptySet(), "more_infos")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "total_karma")

  public override fun toString(): String = buildString(32) {
      append("GeneratedJsonAdapter(").append("ProfileDto").append(')') }

  public override fun fromJson(reader: JsonReader): ProfileDto {
    var name: String? = null
    var id: String? = null
    var urlAvatar: String? = null
    var more_infos: ProfileDto.UserDataSubDto? = null
    var total_karma: Int? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> name = nullableStringAdapter.fromJson(reader)
        1 -> id = nullableStringAdapter.fromJson(reader)
        2 -> urlAvatar = nullableStringAdapter.fromJson(reader)
        3 -> more_infos = nullableUserDataSubDtoAdapter.fromJson(reader)
        4 -> total_karma = nullableIntAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return ProfileDto(
        name = name,
        id = id,
        urlAvatar = urlAvatar,
        more_infos = more_infos,
        total_karma = total_karma
    )
  }

  public override fun toJson(writer: JsonWriter, value_: ProfileDto?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("name")
    nullableStringAdapter.toJson(writer, value_.name)
    writer.name("id")
    nullableStringAdapter.toJson(writer, value_.id)
    writer.name("icon_img")
    nullableStringAdapter.toJson(writer, value_.urlAvatar)
    writer.name("subreddit")
    nullableUserDataSubDtoAdapter.toJson(writer, value_.more_infos)
    writer.name("total_karma")
    nullableIntAdapter.toJson(writer, value_.total_karma)
    writer.endObject()
  }
}
