// Generated by Dagger (https://dagger.dev).
package com.balabanova.humblr.ui.home;

import com.balabanova.humblr.domain.repository.SubredditsRemoteRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SingleSubredditViewModel_Factory implements Factory<SingleSubredditViewModel> {
  private final Provider<SubredditsRemoteRepository> repositoryProvider;

  public SingleSubredditViewModel_Factory(Provider<SubredditsRemoteRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public SingleSubredditViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static SingleSubredditViewModel_Factory create(
      Provider<SubredditsRemoteRepository> repositoryProvider) {
    return new SingleSubredditViewModel_Factory(repositoryProvider);
  }

  public static SingleSubredditViewModel newInstance(SubredditsRemoteRepository repository) {
    return new SingleSubredditViewModel(repository);
  }
}
