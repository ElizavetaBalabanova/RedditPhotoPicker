// Generated by Dagger (https://dagger.dev).
package com.balabanova.humblr.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import okhttp3.Interceptor;

@ScopeMetadata
@QualifierMetadata("com.balabanova.humblr.data.api.interceptor.LoggingInterceptorQualifier")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ApiModule_ProvideLoginInterceptorFactory implements Factory<Interceptor> {
  private final ApiModule module;

  public ApiModule_ProvideLoginInterceptorFactory(ApiModule module) {
    this.module = module;
  }

  @Override
  public Interceptor get() {
    return provideLoginInterceptor(module);
  }

  public static ApiModule_ProvideLoginInterceptorFactory create(ApiModule module) {
    return new ApiModule_ProvideLoginInterceptorFactory(module);
  }

  public static Interceptor provideLoginInterceptor(ApiModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideLoginInterceptor());
  }
}
